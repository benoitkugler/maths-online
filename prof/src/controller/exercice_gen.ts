// Code generated by structgen DO NOT EDIT
// github.com/benoitkugler/maths-online/maths/exercice.randomParameter
export interface randomParameter {
  expression: string;
  variable: number;
}
// github.com/benoitkugler/maths-online/maths/exercice.randomParameters
export type randomParameters = randomParameter[] | null;
// github.com/benoitkugler/maths-online/maths/expression.Variable
export type Variable = number;
// github.com/benoitkugler/maths-online/maths/expression.PythagorianTriplet
export interface PythagorianTriplet {
  A: Variable;
  B: Variable;
  C: Variable;
  Bound: number;
}
// github.com/benoitkugler/maths-online/maths/exercice.Parameters
export interface Parameters {
  Variables: randomParameters;
  Pythagorians: PythagorianTriplet[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.Exercice
export interface Exercice {
  id: number;
  title: string;
  description: string;
  parameters: Parameters;
}

export enum BlockKind {
  FigureBlock = 0,
  FormulaBlock = 1,
  FormulaFieldBlock = 2,
  FunctionGraphBlock = 3,
  FunctionVariationGraphBlock = 4,
  NumberFieldBlock = 5,
  RadioFieldBlock = 6,
  SignTableBlock = 7,
  TableBlock = 8,
  TextBlock = 9,
  VariationTableBlock = 10,
}

export interface Block {
  Kind: BlockKind;
  Data:
    | FigureBlock
    | FormulaBlock
    | FormulaFieldBlock
    | FunctionGraphBlock
    | FunctionVariationGraphBlock
    | NumberFieldBlock
    | RadioFieldBlock
    | SignTableBlock
    | TableBlock
    | TextBlock
    | VariationTableBlock;
}
// github.com/benoitkugler/maths-online/maths/repere.RandomCoord
export interface RandomCoord {
  X: string;
  Y: string;
}
// github.com/benoitkugler/maths-online/maths/repere.LabelPos
export enum LabelPos {
  Bottom = 1,
  BottomLeft = 7,
  BottomRight = 6,
  Left = 2,
  Right = 3,
  Top = 0,
  TopLeft = 4,
  TopRight = 5,
}

export const LabelPosLabels: { [key in LabelPos]: string } = {
  [LabelPos.Bottom]: "En dessous",
  [LabelPos.BottomLeft]: "En dessous, à gauche",
  [LabelPos.BottomRight]: "En dessous, à droite",
  [LabelPos.Left]: "A gauche",
  [LabelPos.Right]: "A droite",
  [LabelPos.Top]: "Au dessus",
  [LabelPos.TopLeft]: "Au dessus, à gauche",
  [LabelPos.TopRight]: "Au dessus, à droite",
};

// github.com/benoitkugler/maths-online/maths/repere.RandomLabeledPoint
export interface RandomLabeledPoint {
  Coord: RandomCoord;
  Pos: LabelPos;
}
// github.com/benoitkugler/maths-online/maths/repere.NamedRandomLabeledPoint
export interface NamedRandomLabeledPoint {
  Name: string;
  Point: RandomLabeledPoint;
}
// github.com/benoitkugler/maths-online/maths/repere.Segment
export interface Segment {
  LabelName: string;
  From: string;
  To: string;
  LabelPos: LabelPos;
  AsVector: boolean;
}
// github.com/benoitkugler/maths-online/maths/repere.RandomLine
export interface RandomLine {
  Label: string;
  A: string;
  B: string;
}
// github.com/benoitkugler/maths-online/maths/repere.RandomDrawings
export interface RandomDrawings {
  Points: NamedRandomLabeledPoint[] | null;
  Segments: Segment[] | null;
  Lines: RandomLine[] | null;
}
// github.com/benoitkugler/maths-online/maths/repere.Coord
export interface Coord {
  X: number;
  Y: number;
}
// github.com/benoitkugler/maths-online/maths/repere.RepereBounds
export interface RepereBounds {
  Width: number;
  Height: number;
  Origin: Coord;
}
// github.com/benoitkugler/maths-online/maths/exercice.FigureBlock
export interface FigureBlock {
  Drawings: RandomDrawings;
  Bounds: RepereBounds;
  ShowGrid: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.Interpolated
export type Interpolated = string;
// github.com/benoitkugler/maths-online/maths/exercice.FormulaBlock
export interface FormulaBlock {
  Parts: Interpolated;
}
// github.com/benoitkugler/maths-online/maths/exercice.TextKind
export enum TextKind {
  Expression = 2,
  StaticMath = 1,
  Text = 0,
}

export const TextKindLabels: { [key in TextKind]: string } = {
  [TextKind.Expression]: "Expression",
  [TextKind.StaticMath]: "Code LaTeX",
  [TextKind.Text]: "Text simple",
};

// github.com/benoitkugler/maths-online/maths/exercice.TextPart
export interface TextPart {
  Content: string;
  Kind: TextKind;
}
// github.com/benoitkugler/maths-online/maths/expression.ComparisonLevel
export enum ComparisonLevel {
  ExpandedSubstitutions = 2,
  SimpleSubstitutions = 1,
  Strict = 0,
}

export const ComparisonLevelLabels: { [key in ComparisonLevel]: string } = {
  [ComparisonLevel.ExpandedSubstitutions]: "Complète",
  [ComparisonLevel.SimpleSubstitutions]: "Simple",
  [ComparisonLevel.Strict]: "Exacte",
};

// github.com/benoitkugler/maths-online/maths/exercice.FormulaFieldBlock
export interface FormulaFieldBlock {
  Expression: string;
  Label: TextPart;
  ComparisonLevel: ComparisonLevel;
}
// github.com/benoitkugler/maths-online/maths/exercice.FunctionGraphBlock
export interface FunctionGraphBlock {
  Function: string;
  Label: string;
  Variable: Variable;
  Range: number[];
}
// github.com/benoitkugler/maths-online/maths/exercice.FunctionVariationGraphBlock
export interface FunctionVariationGraphBlock {
  Xs: string[] | null;
  Fxs: string[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.NumberFieldBlock
export interface NumberFieldBlock {
  Expression: string;
}
// github.com/benoitkugler/maths-online/maths/exercice.RadioFieldBlock
export interface RadioFieldBlock {
  Answer: string;
  Proposals: Interpolated[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.SignSymbol
export enum SignSymbol {
  ForbiddenValue = 2,
  Nothing = 0,
  Zero = 1,
}

export const SignSymbolLabels: { [key in SignSymbol]: string } = {
  [SignSymbol.ForbiddenValue]: "||",
  [SignSymbol.Nothing]: "",
  [SignSymbol.Zero]: "0",
};

// github.com/benoitkugler/maths-online/maths/exercice.SignTableBlock
export interface SignTableBlock {
  Xs: Interpolated[] | null;
  FxSymbols: SignSymbol[] | null;
  Signs: boolean[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.TableBlock
export interface TableBlock {
  HorizontalHeaders: TextPart[] | null;
  VerticalHeaders: TextPart[] | null;
  Values: (TextPart[] | null)[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.TextBlock
export interface TextBlock {
  Parts: Interpolated;
  IsHint: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.VariationTableBlock
export interface VariationTableBlock {
  Xs: string[] | null;
  Fxs: string[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.Enonce
export type Enonce = Block[] | null;
// github.com/benoitkugler/maths-online/maths/exercice.Question
export interface Question {
  title: string;
  enonce: Enonce;
  parameters: Parameters;
}
