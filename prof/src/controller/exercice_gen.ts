// Code generated by structgen DO NOT EDIT
// github.com/benoitkugler/maths-online/prof/editor.DifficultyTag
export enum DifficultyTag {
  Diff1 = "★",
  Diff2 = "★★",
  Diff3 = "★★★",
}

export const DifficultyTagLabels: { [key in DifficultyTag]: string } = {
  [DifficultyTag.Diff1]: "1 étoile",
  [DifficultyTag.Diff2]: "2 étoiles",
  [DifficultyTag.Diff3]: "3 étoiles",
};

export enum BlockKind {
  ExpressionFieldBlock = 0,
  FigureAffineLineFieldBlock = 1,
  FigureBlock = 2,
  FigurePointFieldBlock = 3,
  FigureVectorFieldBlock = 4,
  FigureVectorPairFieldBlock = 5,
  FormulaBlock = 6,
  FunctionGraphBlock = 7,
  FunctionPointsFieldBlock = 8,
  FunctionVariationGraphBlock = 9,
  NumberFieldBlock = 10,
  OrderedListFieldBlock = 11,
  RadioFieldBlock = 12,
  SignTableBlock = 13,
  TableBlock = 14,
  TableFieldBlock = 15,
  TextBlock = 16,
  TreeFieldBlock = 17,
  VariationTableBlock = 18,
  VariationTableFieldBlock = 19,
  VectorFieldBlock = 20,
}

export interface Block {
  Kind: BlockKind;
  Data:
    | ExpressionFieldBlock
    | FigureAffineLineFieldBlock
    | FigureBlock
    | FigurePointFieldBlock
    | FigureVectorFieldBlock
    | FigureVectorPairFieldBlock
    | FormulaBlock
    | FunctionGraphBlock
    | FunctionPointsFieldBlock
    | FunctionVariationGraphBlock
    | NumberFieldBlock
    | OrderedListFieldBlock
    | RadioFieldBlock
    | SignTableBlock
    | TableBlock
    | TableFieldBlock
    | TextBlock
    | TreeFieldBlock
    | VariationTableBlock
    | VariationTableFieldBlock
    | VectorFieldBlock;
}
// github.com/benoitkugler/maths-online/maths/exercice.TextKind
export enum TextKind {
  Expression = 2,
  StaticMath = 1,
  Text = 0,
}

export const TextKindLabels: { [key in TextKind]: string } = {
  [TextKind.Expression]: "Expression",
  [TextKind.StaticMath]: "Code LaTeX",
  [TextKind.Text]: "Text simple",
};

// github.com/benoitkugler/maths-online/maths/exercice.TextPart
export interface TextPart {
  Content: string;
  Kind: TextKind;
}
// github.com/benoitkugler/maths-online/maths/expression.ComparisonLevel
export enum ComparisonLevel {
  ExpandedSubstitutions = 2,
  SimpleSubstitutions = 1,
  Strict = 0,
}

export const ComparisonLevelLabels: { [key in ComparisonLevel]: string } = {
  [ComparisonLevel.ExpandedSubstitutions]: "Complète",
  [ComparisonLevel.SimpleSubstitutions]: "Simple",
  [ComparisonLevel.Strict]: "Exacte",
};

// github.com/benoitkugler/maths-online/maths/exercice.ExpressionFieldBlock
export interface ExpressionFieldBlock {
  Expression: string;
  Label: TextPart;
  ComparisonLevel: ComparisonLevel;
}
// github.com/benoitkugler/maths-online/maths/repere.RandomCoord
export interface RandomCoord {
  X: string;
  Y: string;
}
// github.com/benoitkugler/maths-online/maths/repere.LabelPos
export enum LabelPos {
  Bottom = 1,
  BottomLeft = 7,
  BottomRight = 6,
  Hide = 8,
  Left = 2,
  Right = 3,
  Top = 0,
  TopLeft = 4,
  TopRight = 5,
}

export const LabelPosLabels: { [key in LabelPos]: string } = {
  [LabelPos.Bottom]: "En dessous",
  [LabelPos.BottomLeft]: "En dessous, à gauche",
  [LabelPos.BottomRight]: "En dessous, à droite",
  [LabelPos.Hide]: "Masquer la légende",
  [LabelPos.Left]: "A gauche",
  [LabelPos.Right]: "A droite",
  [LabelPos.Top]: "Au dessus",
  [LabelPos.TopLeft]: "Au dessus, à gauche",
  [LabelPos.TopRight]: "Au dessus, à droite",
};

// github.com/benoitkugler/maths-online/maths/repere.RandomLabeledPoint
export interface RandomLabeledPoint {
  Color: string;
  Coord: RandomCoord;
  Pos: LabelPos;
}
// github.com/benoitkugler/maths-online/maths/repere.NamedRandomLabeledPoint
export interface NamedRandomLabeledPoint {
  Name: string;
  Point: RandomLabeledPoint;
}
// github.com/benoitkugler/maths-online/maths/repere.SegmentKind
export enum SegmentKind {
  SKLine = 2,
  SKSegment = 0,
  SKVector = 1,
}

export const SegmentKindLabels: { [key in SegmentKind]: string } = {
  [SegmentKind.SKLine]: "Droite (infinie)",
  [SegmentKind.SKSegment]: "Segment",
  [SegmentKind.SKVector]: "Vecteur",
};

// github.com/benoitkugler/maths-online/maths/repere.Segment
export interface Segment {
  LabelName: string;
  From: string;
  To: string;
  Color: string;
  LabelPos: LabelPos;
  Kind: SegmentKind;
}
// github.com/benoitkugler/maths-online/maths/repere.RandomLine
export interface RandomLine {
  Label: string;
  A: string;
  B: string;
  Color: string;
}
// github.com/benoitkugler/maths-online/maths/repere.RandomDrawings
export interface RandomDrawings {
  Points: NamedRandomLabeledPoint[] | null;
  Segments: Segment[] | null;
  Lines: RandomLine[] | null;
}
// github.com/benoitkugler/maths-online/maths/repere.Coord
export interface Coord {
  X: number;
  Y: number;
}
// github.com/benoitkugler/maths-online/maths/repere.RepereBounds
export interface RepereBounds {
  Width: number;
  Height: number;
  Origin: Coord;
}
// github.com/benoitkugler/maths-online/maths/exercice.FigureBlock
export interface FigureBlock {
  Drawings: RandomDrawings;
  Bounds: RepereBounds;
  ShowGrid: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.FigureAffineLineFieldBlock
export interface FigureAffineLineFieldBlock {
  Label: string;
  A: string;
  B: string;
  Figure: FigureBlock;
}
// github.com/benoitkugler/maths-online/maths/exercice.CoordExpression
export interface CoordExpression {
  X: string;
  Y: string;
}
// github.com/benoitkugler/maths-online/maths/exercice.FigurePointFieldBlock
export interface FigurePointFieldBlock {
  Answer: CoordExpression;
  Figure: FigureBlock;
}
// github.com/benoitkugler/maths-online/maths/exercice.FigureVectorFieldBlock
export interface FigureVectorFieldBlock {
  Answer: CoordExpression;
  AnswerOrigin: CoordExpression;
  Figure: FigureBlock;
  MustHaveOrigin: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.VectorPairCriterion
export enum VectorPairCriterion {
  VectorColinear = 1,
  VectorEquals = 0,
  VectorOrthogonal = 2,
}

export const VectorPairCriterionLabels: {
  [key in VectorPairCriterion]: string;
} = {
  [VectorPairCriterion.VectorColinear]: "Vecteurs colinéaires",
  [VectorPairCriterion.VectorEquals]: "Vecteurs égaux",
  [VectorPairCriterion.VectorOrthogonal]: "Vecteurs orthogonaux",
};

// github.com/benoitkugler/maths-online/maths/exercice.FigureVectorPairFieldBlock
export interface FigureVectorPairFieldBlock {
  Figure: FigureBlock;
  Criterion: VectorPairCriterion;
}
// github.com/benoitkugler/maths-online/maths/exercice.Interpolated
export type Interpolated = string;
// github.com/benoitkugler/maths-online/maths/exercice.FormulaBlock
export interface FormulaBlock {
  Parts: Interpolated;
}
// github.com/benoitkugler/maths-online/maths/functiongrapher.FunctionDecoration
export interface FunctionDecoration {
  Label: string;
  Color: string;
}
// github.com/benoitkugler/maths-online/maths/expression.Variable
export interface Variable {
  Indice: string;
  Name: number;
}
// github.com/benoitkugler/maths-online/maths/exercice.FunctionDefinition
export interface FunctionDefinition {
  Function: string;
  Decoration: FunctionDecoration;
  Variable: Variable;
  From: string;
  To: string;
}
// github.com/benoitkugler/maths-online/maths/exercice.FunctionGraphBlock
export interface FunctionGraphBlock {
  Functions: FunctionDefinition[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.FunctionPointsFieldBlock
export interface FunctionPointsFieldBlock {
  Function: string;
  Label: string;
  Variable: Variable;
  XGrid: string[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.VariationTableBlock
export interface VariationTableBlock {
  Label: Interpolated;
  Xs: string[] | null;
  Fxs: string[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.FunctionVariationGraphBlock
export type FunctionVariationGraphBlock = VariationTableBlock;
// github.com/benoitkugler/maths-online/maths/exercice.NumberFieldBlock
export interface NumberFieldBlock {
  Expression: string;
}
// github.com/benoitkugler/maths-online/maths/exercice.OrderedListFieldBlock
export interface OrderedListFieldBlock {
  Label: Interpolated;
  Answer: Interpolated[] | null;
  AdditionalProposals: Interpolated[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.RadioFieldBlock
export interface RadioFieldBlock {
  Answer: string;
  Proposals: Interpolated[] | null;
  AsDropDown: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.SignSymbol
export enum SignSymbol {
  ForbiddenValue = 2,
  Nothing = 0,
  Zero = 1,
}

export const SignSymbolLabels: { [key in SignSymbol]: string } = {
  [SignSymbol.ForbiddenValue]: "||",
  [SignSymbol.Nothing]: "",
  [SignSymbol.Zero]: "0",
};

// github.com/benoitkugler/maths-online/maths/exercice.SignTableBlock
export interface SignTableBlock {
  Label: string;
  FxSymbols: SignSymbol[] | null;
  Xs: Interpolated[] | null;
  Signs: boolean[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.TableBlock
export interface TableBlock {
  HorizontalHeaders: TextPart[] | null;
  VerticalHeaders: TextPart[] | null;
  Values: (TextPart[] | null)[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.TableFieldBlock
export interface TableFieldBlock {
  HorizontalHeaders: TextPart[] | null;
  VerticalHeaders: TextPart[] | null;
  Answer: (string[] | null)[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.TextBlock
export interface TextBlock {
  Parts: Interpolated;
  Bold: boolean;
  Italic: boolean;
  Smaller: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.TreeNodeAnswer
export interface TreeNodeAnswer {
  Children: TreeNodeAnswer[] | null;
  Probabilities: string[] | null;
  Value: number;
}
// github.com/benoitkugler/maths-online/maths/exercice.TreeFieldBlock
export interface TreeFieldBlock {
  EventsProposals: string[] | null;
  AnswerRoot: TreeNodeAnswer;
}
// github.com/benoitkugler/maths-online/maths/exercice.VariationTableFieldBlock
export interface VariationTableFieldBlock {
  Answer: VariationTableBlock;
}
// github.com/benoitkugler/maths-online/maths/exercice.VectorFieldBlock
export interface VectorFieldBlock {
  Answer: CoordExpression;
  AcceptColinear: boolean;
  DisplayColumn: boolean;
}
// github.com/benoitkugler/maths-online/maths/exercice.Enonce
export type Enonce = Block[] | null;
// github.com/benoitkugler/maths-online/maths/exercice.RandomParameter
export interface RandomParameter {
  expression: string;
  variable: Variable;
}
// github.com/benoitkugler/maths-online/maths/exercice.RandomParameters
export type RandomParameters = RandomParameter[] | null;
// github.com/benoitkugler/maths-online/maths/exercice.Parameters
export interface Parameters {
  Variables: RandomParameters;
  Intrinsics: string[] | null;
}
// github.com/benoitkugler/maths-online/maths/exercice.QuestionPage
export interface QuestionPage {
  title: string;
  enonce: Enonce;
  parameters: Parameters;
}
// github.com/benoitkugler/maths-online/prof/editor.Question
export interface Question {
  id: number;
  page: QuestionPage;
  public: boolean;
  id_teacher: number;
  description: string;
}
// github.com/benoitkugler/maths-online/prof/editor.QuestionTag
export interface QuestionTag {
  tag: string;
  id_question: number;
}
