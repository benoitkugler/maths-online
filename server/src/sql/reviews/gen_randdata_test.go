package reviews

import (
	"math/rand"
	"time"

	"github.com/benoitkugler/maths-online/server/src/sql/editor"
	"github.com/benoitkugler/maths-online/server/src/sql/teacher"
	"github.com/benoitkugler/maths-online/server/src/sql/trivial"
)

// Code generated by gomacro/generator/go/randdata. DO NOT EDIT.

func randApproval() Approval {
	choix := [...]Approval{Neutral, InFavor, Opposed}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randComment() Comment {
	var s Comment
	s.Time = randtTime()
	s.Message = randstring()

	return s
}

func randComments() Comments {
	return Comments(randSliceComment())
}

func randIdReview() IdReview {
	return IdReview(randint64())
}

func randReview() Review {
	var s Review
	s.Id = randIdReview()
	s.Kind = randReviewKind()

	return s
}

func randReviewExercice() ReviewExercice {
	var s ReviewExercice
	s.IdReview = randIdReview()
	s.IdExercice = randedi_IdExercicegroup()
	s.Kind = randReviewKind()

	return s
}

func randReviewKind() ReviewKind {
	choix := [...]ReviewKind{KQuestion, KExercice, KTrivial}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randReviewParticipation() ReviewParticipation {
	var s ReviewParticipation
	s.IdReview = randIdReview()
	s.IdTeacher = randtea_IdTeacher()
	s.Approval = randApproval()
	s.Comments = randComments()

	return s
}

func randReviewQuestion() ReviewQuestion {
	var s ReviewQuestion
	s.IdReview = randIdReview()
	s.IdQuestion = randedi_IdQuestiongroup()
	s.Kind = randReviewKind()

	return s
}

func randReviewTrivial() ReviewTrivial {
	var s ReviewTrivial
	s.IdReview = randIdReview()
	s.IdTrivial = randtri_IdTrivial()
	s.Kind = randReviewKind()

	return s
}

func randSliceComment() []Comment {
	l := 40 + rand.Intn(10)
	out := make([]Comment, l)
	for i := range out {
		out[i] = randComment()
	}
	return out
}

func randedi_IdExercicegroup() editor.IdExercicegroup {
	return editor.IdExercicegroup(randint64())
}

func randedi_IdQuestiongroup() editor.IdQuestiongroup {
	return editor.IdQuestiongroup(randint64())
}

func randint64() int64 {
	return int64(rand.Intn(1000000))
}

var letterRunes2 = []rune("azertyuiopqsdfghjklmwxcvbn123456789é@!?&èïab ")

func randstring() string {
	b := make([]rune, 50)
	maxLength := len(letterRunes2)
	for i := range b {
		b[i] = letterRunes2[rand.Intn(maxLength)]
	}
	return string(b)
}

func randtTime() time.Time {
	return time.Unix(int64(rand.Int31()), 5)
}

func randtea_IdTeacher() teacher.IdTeacher {
	return teacher.IdTeacher(randint64())
}

func randtri_IdTrivial() trivial.IdTrivial {
	return trivial.IdTrivial(randint64())
}
