package reviews

import (
	"math/rand"
	"time"

	"github.com/benoitkugler/maths-online/sql/editor"
	"github.com/benoitkugler/maths-online/sql/teacher"
	"github.com/benoitkugler/maths-online/sql/trivial"
)

// Code generated by gomacro/generator/go/randdata. DO NOT EDIT.

func randApproval() Approval {
	choix := [...]Approval{Neutral, InFavor, Opposed}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randComment() Comment {
	return Comment{
		Time:    randtTime(),
		Message: randstring(),
	}
}

func randComments() Comments {
	return Comments(randSliceComment())
}

func randIdReview() IdReview {
	return IdReview(randint64())
}

func randKind() Kind {
	choix := [...]Kind{KQuestion, KExercice, KTrivial}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randReview() Review {
	return Review{
		Id:   randIdReview(),
		Kind: randKind(),
	}
}

func randReviewExercice() ReviewExercice {
	return ReviewExercice{
		IdReview:   randIdReview(),
		IdExercice: randedi_IdExercicegroup(),
		Kind:       randKind(),
	}
}

func randReviewParticipation() ReviewParticipation {
	return ReviewParticipation{
		IdReview:  randIdReview(),
		IdTeacher: randtea_IdTeacher(),
		Approval:  randApproval(),
		Comments:  randComments(),
	}
}

func randReviewQuestion() ReviewQuestion {
	return ReviewQuestion{
		IdReview:   randIdReview(),
		IdQuestion: randedi_IdQuestiongroup(),
		Kind:       randKind(),
	}
}

func randReviewTrivial() ReviewTrivial {
	return ReviewTrivial{
		IdReview:  randIdReview(),
		IdTrivial: randtri_IdTrivial(),
		Kind:      randKind(),
	}
}

func randSliceComment() []Comment {
	l := 40 + rand.Intn(10)
	out := make([]Comment, l)
	for i := range out {
		out[i] = randComment()
	}
	return out
}

func randedi_IdExercicegroup() editor.IdExercicegroup {
	return editor.IdExercicegroup(randint64())
}

func randedi_IdQuestiongroup() editor.IdQuestiongroup {
	return editor.IdQuestiongroup(randint64())
}

func randint64() int64 {
	return int64(rand.Intn(1000000))
}

var letterRunes2 = []rune("azertyuiopqsdfghjklmwxcvbn123456789é@!?&èïab ")

func randstring() string {
	b := make([]rune, 50)
	maxLength := len(letterRunes2)
	for i := range b {
		b[i] = letterRunes2[rand.Intn(maxLength)]
	}
	return string(b)
}

func randtTime() time.Time {
	return time.Unix(int64(rand.Int31()), 5)
}

func randtea_IdTeacher() teacher.IdTeacher {
	return teacher.IdTeacher(randint64())
}

func randtri_IdTrivial() trivial.IdTrivial {
	return trivial.IdTrivial(randint64())
}
