package tasks

import (
	"math/rand"

	"github.com/benoitkugler/maths-online/sql/editor"
	"github.com/benoitkugler/maths-online/sql/teacher"
)

// Code generated by gomacro/generator/go/randdata. DO NOT EDIT.

func randIdMonoquestion() IdMonoquestion {
	return IdMonoquestion(randint64())
}

func randIdProgression() IdProgression {
	return IdProgression(randint64())
}

func randIdTask() IdTask {
	return IdTask(randint64())
}

func randMonoquestion() Monoquestion {
	return Monoquestion{
		Id:         randIdMonoquestion(),
		IdQuestion: randedi_IdQuestion(),
		NbRepeat:   randint(),
		Bareme:     randint(),
	}
}

func randOptionalIdMonoquestion() OptionalIdMonoquestion {
	return OptionalIdMonoquestion{
		Valid: randbool(),
		ID:    randIdMonoquestion(),
	}
}

func randProgression() Progression {
	return Progression{
		Id:        randIdProgression(),
		IdStudent: randtea_IdStudent(),
		IdTask:    randIdTask(),
	}
}

func randProgressionQuestion() ProgressionQuestion {
	return ProgressionQuestion{
		IdProgression: randIdProgression(),
		Index:         randint(),
		History:       randQuestionHistory(),
	}
}

func randQuestionHistory() QuestionHistory {
	return QuestionHistory(randSlicebool())
}

func randSlicebool() []bool {
	l := 40 + rand.Intn(10)
	out := make([]bool, l)
	for i := range out {
		out[i] = randbool()
	}
	return out
}

func randTask() Task {
	return Task{
		Id:             randIdTask(),
		IdExercice:     randedi_OptionalIdExercice(),
		IdMonoquestion: randOptionalIdMonoquestion(),
	}
}

func randbool() bool {
	i := rand.Int31n(2)
	return i == 1
}

func randedi_IdExercice() editor.IdExercice {
	return editor.IdExercice(randint64())
}

func randedi_IdQuestion() editor.IdQuestion {
	return editor.IdQuestion(randint64())
}

func randedi_OptionalIdExercice() editor.OptionalIdExercice {
	return editor.OptionalIdExercice{
		Valid: randbool(),
		ID:    randedi_IdExercice(),
	}
}

func randint() int {
	return int(rand.Intn(1000000))
}

func randint64() int64 {
	return int64(rand.Intn(1000000))
}

func randtea_IdStudent() teacher.IdStudent {
	return teacher.IdStudent(randint64())
}
