package teacher

import (
	"math/rand"
	"time"
)

// Code generated by gomacro/generator/go/randdata. DO NOT EDIT.

func randClassroom() Classroom {
	var s Classroom
	s.Id = randIdClassroom()
	s.IdTeacher = randIdTeacher()
	s.Name = randstring()
	s.MaxRankThreshold = randint()

	return s
}

func randClassroomCode() ClassroomCode {
	var s ClassroomCode
	s.IdClassroom = randIdClassroom()
	s.Code = randstring()
	s.ExpiresAt = randTime()

	return s
}

func randClient() Client {
	var s Client
	s.Device = randstring()
	s.Time = randtTime()

	return s
}

func randClients() Clients {
	return Clients(randSliceClient())
}

func randContact() Contact {
	var s Contact
	s.Name = randstring()
	s.URL = randstring()

	return s
}

func randDate() Date {
	return Date(randtDate())
}

func randIdClassroom() IdClassroom {
	return IdClassroom(randint64())
}

func randIdStudent() IdStudent {
	return IdStudent(randint64())
}

func randIdTeacher() IdTeacher {
	return IdTeacher(randint64())
}

func randMatiereTag() MatiereTag {
	choix := [...]MatiereTag{Allemand, Anglais, Autre, Espagnol, Francais, HistoireGeo, Italien, Mathematiques, PhysiqueChimie, SES, SVT}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randSliceClient() []Client {
	l := 3 + rand.Intn(5)
	out := make([]Client, l)
	for i := range out {
		out[i] = randClient()
	}
	return out
}

func randSliceuint8() []byte {
	l := 3 + rand.Intn(5)
	out := make([]byte, l)
	for i := range out {
		out[i] = randuint8()
	}
	return out
}

func randStudent() Student {
	var s Student
	s.Id = randIdStudent()
	s.Name = randstring()
	s.Surname = randstring()
	s.Birthday = randDate()
	s.IdClassroom = randIdClassroom()
	s.Clients = randClients()

	return s
}

func randTeacher() Teacher {
	var s Teacher
	s.Id = randIdTeacher()
	s.Mail = randstring()
	s.PasswordCrypted = randSliceuint8()
	s.IsAdmin = randbool()
	s.HasSimplifiedEditor = randbool()
	s.Contact = randContact()
	s.FavoriteMatiere = randMatiereTag()

	return s
}

func randTime() Time {
	return Time(randtTime())
}

func randbool() bool {
	i := rand.Int31n(2)
	return i == 1
}

func randint() int {
	return int(rand.Intn(1000000))
}

func randint64() int64 {
	return int64(rand.Intn(1000000))
}

var letterRunes2 = []rune("azertyuiopqsdfghjklmwxcvbn123456789é@!?&èïab ")

func randstring() string {
	b := make([]rune, 10)
	maxLength := len(letterRunes2)
	for i := range b {
		b[i] = letterRunes2[rand.Intn(maxLength)]
	}
	return string(b)
}

func randtDate() time.Time {
	return time.Unix(int64(rand.Int31()), 5)
}

func randtTime() time.Time {
	return time.Unix(int64(rand.Int31()), 5)
}

func randuint8() uint8 {
	return uint8(rand.Intn(1000000))
}
