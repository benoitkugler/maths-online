package trivial

import (
	"math/rand"

	"github.com/benoitkugler/maths-online/server/src/sql/editor"
	"github.com/benoitkugler/maths-online/server/src/sql/teacher"
)

// Code generated by gomacro/generator/go/randdata. DO NOT EDIT.

func randArray5QuestionCriterion() [5]QuestionCriterion {
	var out [5]QuestionCriterion
	for i := range out {
		out[i] = randQuestionCriterion()
	}
	return out
}

func randCategoriesQuestions() CategoriesQuestions {
	var s CategoriesQuestions
	s.Tags = randArray5QuestionCriterion()
	s.Difficulties = randedi_DifficultyQuery()

	return s
}

func randIdTrivial() IdTrivial {
	return IdTrivial(randint64())
}

func randQuestionCriterion() QuestionCriterion {
	return QuestionCriterion(randSliceSliceedi_TagSection())
}

func randSelfaccessTrivial() SelfaccessTrivial {
	var s SelfaccessTrivial
	s.IdClassroom = randtea_IdClassroom()
	s.IdTrivial = randIdTrivial()
	s.IdTeacher = randtea_IdTeacher()

	return s
}

func randSliceSliceedi_TagSection() [][]editor.TagSection {
	l := 3 + rand.Intn(5)
	out := make([][]editor.TagSection, l)
	for i := range out {
		out[i] = randSliceedi_TagSection()
	}
	return out
}

func randSliceedi_DifficultyTag() []editor.DifficultyTag {
	l := 3 + rand.Intn(5)
	out := make([]editor.DifficultyTag, l)
	for i := range out {
		out[i] = randedi_DifficultyTag()
	}
	return out
}

func randSliceedi_TagSection() []editor.TagSection {
	l := 3 + rand.Intn(5)
	out := make([]editor.TagSection, l)
	for i := range out {
		out[i] = randedi_TagSection()
	}
	return out
}

func randTrivial() Trivial {
	var s Trivial
	s.Id = randIdTrivial()
	s.Questions = randCategoriesQuestions()
	s.QuestionTimeout = randint()
	s.ShowDecrassage = randbool()
	s.Public = randbool()
	s.IdTeacher = randtea_IdTeacher()
	s.Name = randstring()

	return s
}

func randbool() bool {
	i := rand.Int31n(2)
	return i == 1
}

func randedi_DifficultyQuery() editor.DifficultyQuery {
	return editor.DifficultyQuery(randSliceedi_DifficultyTag())
}

func randedi_DifficultyTag() editor.DifficultyTag {
	choix := [...]editor.DifficultyTag{editor.Diff1, editor.Diff2, editor.Diff3, editor.DiffEmpty}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randedi_Section() editor.Section {
	choix := [...]editor.Section{editor.Chapter, editor.Level, editor.SubLevel, editor.TrivMath}
	i := rand.Intn(len(choix))
	return choix[i]
}

func randedi_TagSection() editor.TagSection {
	var s editor.TagSection
	s.Tag = randstring()
	s.Section = randedi_Section()

	return s
}

func randint() int {
	return int(rand.Intn(1000000))
}

func randint64() int64 {
	return int64(rand.Intn(1000000))
}

var letterRunes2 = []rune("azertyuiopqsdfghjklmwxcvbn123456789é@!?&èïab ")

func randstring() string {
	b := make([]rune, 10)
	maxLength := len(letterRunes2)
	for i := range b {
		b[i] = letterRunes2[rand.Intn(maxLength)]
	}
	return string(b)
}

func randtea_IdClassroom() teacher.IdClassroom {
	return teacher.IdClassroom(randint64())
}

func randtea_IdTeacher() teacher.IdTeacher {
	return teacher.IdTeacher(randint64())
}
