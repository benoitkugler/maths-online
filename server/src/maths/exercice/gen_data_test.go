package exercice

import "math/rand"

// Code generated by structgen. DO NOT EDIT.

func randblock() block {
	choix := [...]block{
		randFormula(),
		randFormulaField(),
		randListField(),
		randNumberField(),
		randTextBlock(),
	}
	i := rand.Intn(5)
	return choix[i]
}

func randSliceblock() []block {
	l := rand.Intn(10)
	out := make([]block, l)
	for i := range out {
		out[i] = randblock()
	}
	return out
}

func randEnonce() Enonce {
	return Enonce(randSliceblock())
}

func randint64() int64 {
	return int64(rand.Intn(1000000))
}

var letterRunes2 = []rune("azertyuiopqsdfghjklmwxcvbn123456789é@!?&èïab ")

func randstring() string {
	b := make([]rune, 50)
	maxLength := len(letterRunes2)
	for i := range b {
		b[i] = letterRunes2[rand.Intn(maxLength)]
	}
	return string(b)
}

func randrune() rune {
	return rune(rand.Intn(1000000))
}

func randrandomParameter() randomParameter {
	return randomParameter{
		Expression: randstring(),
		Variable:   randrune(),
	}
}

func randSlicerandomParameter() []randomParameter {
	l := rand.Intn(10)
	out := make([]randomParameter, l)
	for i := range out {
		out[i] = randrandomParameter()
	}
	return out
}

func randrandomParameters() randomParameters {
	return randomParameters(randSlicerandomParameter())
}

func randExercice() Exercice {
	return Exercice{
		Id:               randint64(),
		Title:            randstring(),
		Description:      randstring(),
		RandomParameters: randrandomParameters(),
	}
}

func randbool() bool {
	i := rand.Int31n(2)
	return i == 1
}

func randFormulaPart() FormulaPart {
	return FormulaPart{
		Content:      randstring(),
		IsExpression: randbool(),
	}
}

func randSliceFormulaPart() []FormulaPart {
	l := rand.Intn(10)
	out := make([]FormulaPart, l)
	for i := range out {
		out[i] = randFormulaPart()
	}
	return out
}

func randFormulaContent() FormulaContent {
	return FormulaContent(randSliceFormulaPart())
}

func randFormula() Formula {
	return Formula{
		Chunks:   randFormulaContent(),
		IsInline: randbool(),
	}
}

func randFormulaField() FormulaField {
	return FormulaField{
		Expression: randstring(),
	}
}

func randSlicestring() []string {
	l := rand.Intn(10)
	out := make([]string, l)
	for i := range out {
		out[i] = randstring()
	}
	return out
}

func randListField() ListField {
	return ListField{
		Choices: randSlicestring(),
	}
}

func randNumberField() NumberField {
	return NumberField{
		Expression: randstring(),
	}
}

func randQuestion() Question {
	return Question{
		IdExercice: randint64(),
		Title:      randstring(),
		Enonce:     randEnonce(),
	}
}

func randTextBlock() TextBlock {
	return TextBlock{
		Text: randstring(),
	}
}
