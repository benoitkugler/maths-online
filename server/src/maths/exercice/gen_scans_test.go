package exercice

// Code generated by structgen. DO NOT EDIT.

import "database/sql"

func queriesExercice(tx *sql.Tx, item Exercice) (Exercice, error) {
	item, err := item.Insert(tx)

	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM exercices")
	if err != nil {
		return item, err
	}
	items, err := ScanExercices(rows)
	if err != nil {
		return item, err
	}

	_ = items.IDs()

	item, err = item.Update(tx)
	if err != nil {
		return item, err
	}
	_, err = SelectExercice(tx, item.Id)

	return item, err
}

func queriesFormula(tx *sql.Tx, item Formula) (Formula, error) {
	err := InsertManyFormulas(tx, item)
	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM formulas")
	if err != nil {
		return item, err
	}
	items, err := ScanFormulas(rows)
	if err != nil {
		return item, err
	}

	_ = len(items)

	row := tx.QueryRow(`SELECT * FROM formulas WHERE 
		;`)
	_, err = ScanFormula(row)

	return item, err
}

func queriesFormulaField(tx *sql.Tx, item FormulaField) (FormulaField, error) {
	err := InsertManyFormulaFields(tx, item)
	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM formula_fields")
	if err != nil {
		return item, err
	}
	items, err := ScanFormulaFields(rows)
	if err != nil {
		return item, err
	}

	_ = len(items)

	row := tx.QueryRow(`SELECT * FROM formula_fields WHERE 
		;`)
	_, err = ScanFormulaField(row)

	return item, err
}

func queriesListField(tx *sql.Tx, item ListField) (ListField, error) {
	err := InsertManyListFields(tx, item)
	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM list_fields")
	if err != nil {
		return item, err
	}
	items, err := ScanListFields(rows)
	if err != nil {
		return item, err
	}

	_ = len(items)

	row := tx.QueryRow(`SELECT * FROM list_fields WHERE 
		;`)
	_, err = ScanListField(row)

	return item, err
}

func queriesNumberField(tx *sql.Tx, item NumberField) (NumberField, error) {
	err := InsertManyNumberFields(tx, item)
	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM number_fields")
	if err != nil {
		return item, err
	}
	items, err := ScanNumberFields(rows)
	if err != nil {
		return item, err
	}

	_ = len(items)

	row := tx.QueryRow(`SELECT * FROM number_fields WHERE 
		;`)
	_, err = ScanNumberField(row)

	return item, err
}

func queriesQuestion(tx *sql.Tx, item Question) (Question, error) {
	err := InsertManyQuestions(tx, item)
	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM questions")
	if err != nil {
		return item, err
	}
	items, err := ScanQuestions(rows)
	if err != nil {
		return item, err
	}

	_ = len(items)

	row := tx.QueryRow(`SELECT * FROM questions WHERE 
		id_exercice = $1;`, item.IdExercice)
	_, err = ScanQuestion(row)

	return item, err
}

func queriesTextBlock(tx *sql.Tx, item TextBlock) (TextBlock, error) {
	err := InsertManyTextBlocks(tx, item)
	if err != nil {
		return item, err
	}
	rows, err := tx.Query("SELECT * FROM text_blocks")
	if err != nil {
		return item, err
	}
	items, err := ScanTextBlocks(rows)
	if err != nil {
		return item, err
	}

	_ = len(items)

	row := tx.QueryRow(`SELECT * FROM text_blocks WHERE 
		;`)
	_, err = ScanTextBlock(row)

	return item, err
}
