// Code generated by gomacro/generator/dart. DO NOT EDIT

import 'questions/types.gen.dart';
import 'shared_gen.dart';

/// github.com/benoitkugler/maths-online/prof/editor.LoopbackClientEvent
abstract class LoopbackClientEvent {}

LoopbackClientEvent loopbackClientEventFromJson(dynamic json_) {
  final json = json_ as JSON;
  final kind = json['Kind'] as String;
  final data = json['Data'];
  switch (kind) {
    case "loopbackExerciceValidIn":
      return loopbackExerciceValidInFromJson(data);
    case "loopbackPing":
      return loopbackPingFromJson(data);
    case "loopbackQuestionCorrectAnswersIn":
      return loopbackQuestionCorrectAnswersInFromJson(data);
    case "loopbackQuestionValidIn":
      return loopbackQuestionValidInFromJson(data);
    default:
      throw ("unexpected type");
  }
}

JSON loopbackClientEventToJson(LoopbackClientEvent item) {
  if (item is LoopbackExerciceValidIn) {
    return {
      'Kind': "loopbackExerciceValidIn",
      'Data': loopbackExerciceValidInToJson(item)
    };
  } else if (item is LoopbackPing) {
    return {'Kind': "loopbackPing", 'Data': loopbackPingToJson(item)};
  } else if (item is LoopbackQuestionCorrectAnswersIn) {
    return {
      'Kind': "loopbackQuestionCorrectAnswersIn",
      'Data': loopbackQuestionCorrectAnswersInToJson(item)
    };
  } else if (item is LoopbackQuestionValidIn) {
    return {
      'Kind': "loopbackQuestionValidIn",
      'Data': loopbackQuestionValidInToJson(item)
    };
  } else {
    throw ("unexpected type");
  }
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackExerciceValidIn
class LoopbackExerciceValidIn implements LoopbackClientEvent {
  final EvaluateExerciceIn answer;

  const LoopbackExerciceValidIn(this.answer);

  @override
  String toString() {
    return "LoopbackExerciceValidIn($answer)";
  }
}

LoopbackExerciceValidIn loopbackExerciceValidInFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackExerciceValidIn(evaluateExerciceInFromJson(json['Answer']));
}

JSON loopbackExerciceValidInToJson(LoopbackExerciceValidIn item) {
  return {"Answer": evaluateExerciceInToJson(item.answer)};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackPaused
class LoopbackPaused implements LoopbackServerEvent {
  const LoopbackPaused();

  @override
  String toString() {
    return "LoopbackPaused()";
  }
}

LoopbackPaused loopbackPausedFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackPaused();
}

JSON loopbackPausedToJson(LoopbackPaused item) {
  return {};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackPing
class LoopbackPing implements LoopbackClientEvent {
  const LoopbackPing();

  @override
  String toString() {
    return "LoopbackPing()";
  }
}

LoopbackPing loopbackPingFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackPing();
}

JSON loopbackPingToJson(LoopbackPing item) {
  return {};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackQuestion
class LoopbackQuestion implements LoopbackServerEvent {
  final Question question;

  const LoopbackQuestion(this.question);

  @override
  String toString() {
    return "LoopbackQuestion($question)";
  }
}

LoopbackQuestion loopbackQuestionFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackQuestion(questionFromJson(json['Question']));
}

JSON loopbackQuestionToJson(LoopbackQuestion item) {
  return {"Question": questionToJson(item.question)};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackQuestionCorrectAnswersIn
class LoopbackQuestionCorrectAnswersIn implements LoopbackClientEvent {
  const LoopbackQuestionCorrectAnswersIn();

  @override
  String toString() {
    return "LoopbackQuestionCorrectAnswersIn()";
  }
}

LoopbackQuestionCorrectAnswersIn loopbackQuestionCorrectAnswersInFromJson(
    dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackQuestionCorrectAnswersIn();
}

JSON loopbackQuestionCorrectAnswersInToJson(
    LoopbackQuestionCorrectAnswersIn item) {
  return {};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackQuestionCorrectAnswersOut
class LoopbackQuestionCorrectAnswersOut implements LoopbackServerEvent {
  final QuestionAnswersIn answers;

  const LoopbackQuestionCorrectAnswersOut(this.answers);

  @override
  String toString() {
    return "LoopbackQuestionCorrectAnswersOut($answers)";
  }
}

LoopbackQuestionCorrectAnswersOut loopbackQuestionCorrectAnswersOutFromJson(
    dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackQuestionCorrectAnswersOut(
      questionAnswersInFromJson(json['Answers']));
}

JSON loopbackQuestionCorrectAnswersOutToJson(
    LoopbackQuestionCorrectAnswersOut item) {
  return {"Answers": questionAnswersInToJson(item.answers)};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackQuestionValidIn
class LoopbackQuestionValidIn implements LoopbackClientEvent {
  final QuestionAnswersIn answers;

  const LoopbackQuestionValidIn(this.answers);

  @override
  String toString() {
    return "LoopbackQuestionValidIn($answers)";
  }
}

LoopbackQuestionValidIn loopbackQuestionValidInFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackQuestionValidIn(questionAnswersInFromJson(json['Answers']));
}

JSON loopbackQuestionValidInToJson(LoopbackQuestionValidIn item) {
  return {"Answers": questionAnswersInToJson(item.answers)};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackQuestionValidOut
class LoopbackQuestionValidOut implements LoopbackServerEvent {
  final QuestionAnswersOut answers;

  const LoopbackQuestionValidOut(this.answers);

  @override
  String toString() {
    return "LoopbackQuestionValidOut($answers)";
  }
}

LoopbackQuestionValidOut loopbackQuestionValidOutFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackQuestionValidOut(questionAnswersOutFromJson(json['Answers']));
}

JSON loopbackQuestionValidOutToJson(LoopbackQuestionValidOut item) {
  return {"Answers": questionAnswersOutToJson(item.answers)};
}

/// github.com/benoitkugler/maths-online/prof/editor.LoopbackServerEvent
abstract class LoopbackServerEvent {}

LoopbackServerEvent loopbackServerEventFromJson(dynamic json_) {
  final json = json_ as JSON;
  final kind = json['Kind'] as String;
  final data = json['Data'];
  switch (kind) {
    case "loopbackPaused":
      return loopbackPausedFromJson(data);
    case "loopbackQuestion":
      return loopbackQuestionFromJson(data);
    case "loopbackQuestionCorrectAnswersOut":
      return loopbackQuestionCorrectAnswersOutFromJson(data);
    case "loopbackQuestionValidOut":
      return loopbackQuestionValidOutFromJson(data);
    case "loopbackShowExercice":
      return loopbackShowExerciceFromJson(data);
    default:
      throw ("unexpected type");
  }
}

JSON loopbackServerEventToJson(LoopbackServerEvent item) {
  if (item is LoopbackPaused) {
    return {'Kind': "loopbackPaused", 'Data': loopbackPausedToJson(item)};
  } else if (item is LoopbackQuestion) {
    return {'Kind': "loopbackQuestion", 'Data': loopbackQuestionToJson(item)};
  } else if (item is LoopbackQuestionCorrectAnswersOut) {
    return {
      'Kind': "loopbackQuestionCorrectAnswersOut",
      'Data': loopbackQuestionCorrectAnswersOutToJson(item)
    };
  } else if (item is LoopbackQuestionValidOut) {
    return {
      'Kind': "loopbackQuestionValidOut",
      'Data': loopbackQuestionValidOutToJson(item)
    };
  } else if (item is LoopbackShowExercice) {
    return {
      'Kind': "loopbackShowExercice",
      'Data': loopbackShowExerciceToJson(item)
    };
  } else {
    throw ("unexpected type");
  }
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackShowExercice
class LoopbackShowExercice implements LoopbackServerEvent {
  final InstantiatedExercice exercice;
  final ProgressionExt progression;

  const LoopbackShowExercice(this.exercice, this.progression);

  @override
  String toString() {
    return "LoopbackShowExercice($exercice, $progression)";
  }
}

LoopbackShowExercice loopbackShowExerciceFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackShowExercice(instantiatedExerciceFromJson(json['Exercice']),
      progressionExtFromJson(json['Progression']));
}

JSON loopbackShowExerciceToJson(LoopbackShowExercice item) {
  return {
    "Exercice": instantiatedExerciceToJson(item.exercice),
    "Progression": progressionExtToJson(item.progression)
  };
}

typedef JSON = Map<String, dynamic>; // alias to shorten JSON convertors
