// Code generated by structgen. DO NOT EDIT

typedef JSON = Map<String, dynamic>; // alias to shorten JSON convertors

int intFromJson(dynamic json) => json as int;

int intToJson(int item) => item;

String stringFromJson(dynamic json) => json == null ? "" : json as String;

String stringToJson(String item) => item;

bool boolFromJson(dynamic json) => json as bool;

bool boolToJson(bool item) => item;

// github.com/benoitkugler/maths-online/prof/students.Student
class Student {
  final int id;
  final String name;
  final String surname;
  final int trivialSuccess;
  final bool isClientAttached;

  const Student(this.id, this.name, this.surname, this.trivialSuccess,
      this.isClientAttached);

  @override
  String toString() {
    return "Student($id, $name, $surname, $trivialSuccess, $isClientAttached)";
  }
}

Student studentFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Student(
      intFromJson(json['Id']),
      stringFromJson(json['Name']),
      stringFromJson(json['Surname']),
      intFromJson(json['TrivialSuccess']),
      boolFromJson(json['IsClientAttached']));
}

JSON studentToJson(Student item) {
  return {
    "Id": intToJson(item.id),
    "Name": stringToJson(item.name),
    "Surname": stringToJson(item.surname),
    "TrivialSuccess": intToJson(item.trivialSuccess),
    "IsClientAttached": boolToJson(item.isClientAttached)
  };
}

List<Student> listStudentFromJson(dynamic json) {
  if (json == null) {
    return [];
  }
  return (json as List<dynamic>).map(studentFromJson).toList();
}

List<dynamic> listStudentToJson(List<Student> item) {
  return item.map(studentToJson).toList();
}
