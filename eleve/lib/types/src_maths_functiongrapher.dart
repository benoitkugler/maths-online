// Code generated by gomacro/generator/dart. DO NOT EDIT

import 'predefined.dart';
import 'src_maths_repere.dart';

// github.com/benoitkugler/maths-online/server/src/maths/functiongrapher.BezierCurve
class BezierCurve {
  final Coord p0;
  final Coord p1;
  final Coord p2;

  const BezierCurve(this.p0, this.p1, this.p2);

  @override
  String toString() {
    return "BezierCurve($p0, $p1, $p2)";
  }
}

BezierCurve bezierCurveFromJson(dynamic json_) {
  final json = (json_ as Map<String, dynamic>);
  return BezierCurve(coordFromJson(json['P0']), coordFromJson(json['P1']),
      coordFromJson(json['P2']));
}

Map<String, dynamic> bezierCurveToJson(BezierCurve item) {
  return {
    "P0": coordToJson(item.p0),
    "P1": coordToJson(item.p1),
    "P2": coordToJson(item.p2)
  };
}

// github.com/benoitkugler/maths-online/server/src/maths/functiongrapher.FunctionDecoration
class FunctionDecoration {
  final String label;
  final String color;

  const FunctionDecoration(this.label, this.color);

  @override
  String toString() {
    return "FunctionDecoration($label, $color)";
  }
}

FunctionDecoration functionDecorationFromJson(dynamic json_) {
  final json = (json_ as Map<String, dynamic>);
  return FunctionDecoration(
      stringFromJson(json['Label']), stringFromJson(json['Color']));
}

Map<String, dynamic> functionDecorationToJson(FunctionDecoration item) {
  return {"Label": stringToJson(item.label), "Color": stringToJson(item.color)};
}

// github.com/benoitkugler/maths-online/server/src/maths/functiongrapher.FunctionGraph
class FunctionGraph {
  final FunctionDecoration decoration;
  final List<BezierCurve> segments;

  const FunctionGraph(this.decoration, this.segments);

  @override
  String toString() {
    return "FunctionGraph($decoration, $segments)";
  }
}

FunctionGraph functionGraphFromJson(dynamic json_) {
  final json = (json_ as Map<String, dynamic>);
  return FunctionGraph(functionDecorationFromJson(json['Decoration']),
      listBezierCurveFromJson(json['Segments']));
}

Map<String, dynamic> functionGraphToJson(FunctionGraph item) {
  return {
    "Decoration": functionDecorationToJson(item.decoration),
    "Segments": listBezierCurveToJson(item.segments)
  };
}

List<BezierCurve> listBezierCurveFromJson(dynamic json) {
  if (json == null) {
    return [];
  }
  return (json as List<dynamic>).map(bezierCurveFromJson).toList();
}

List<dynamic> listBezierCurveToJson(List<BezierCurve> item) {
  return item.map(bezierCurveToJson).toList();
}
