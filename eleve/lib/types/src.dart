// Code generated by gomacro/generator/dart. DO NOT EDIT

import 'predefined.dart';
import 'src_maths_questions_client.dart';
import 'src_tasks.dart';

// github.com/benoitkugler/maths-online/server/src.CheckExpressionOut
class CheckExpressionOut {
  final String reason;
  final bool isValid;

  const CheckExpressionOut(this.reason, this.isValid);

  @override
  String toString() {
    return "CheckExpressionOut($reason, $isValid)";
  }
}

CheckExpressionOut checkExpressionOutFromJson(dynamic json_) {
  final json = (json_ as Map<String, dynamic>);
  return CheckExpressionOut(
      stringFromJson(json['Reason']), boolFromJson(json['IsValid']));
}

Map<String, dynamic> checkExpressionOutToJson(CheckExpressionOut item) {
  return {
    "Reason": stringToJson(item.reason),
    "IsValid": boolToJson(item.isValid)
  };
}

// github.com/benoitkugler/maths-online/server/src.labeledQuestion
class LabeledQuestion {
  final String title;
  final Question question;

  const LabeledQuestion(this.title, this.question);

  @override
  String toString() {
    return "LabeledQuestion($title, $question)";
  }
}

LabeledQuestion labeledQuestionFromJson(dynamic json_) {
  final json = (json_ as Map<String, dynamic>);
  return LabeledQuestion(
      stringFromJson(json['Title']), questionFromJson(json['Question']));
}

Map<String, dynamic> labeledQuestionToJson(LabeledQuestion item) {
  return {
    "Title": stringToJson(item.title),
    "Question": questionToJson(item.question)
  };
}

// github.com/benoitkugler/maths-online/server/src.StudentWork
class StudentWork {
  final InstantiatedWork exercice;
  final ProgressionExt progression;

  const StudentWork(this.exercice, this.progression);

  @override
  String toString() {
    return "StudentWork($exercice, $progression)";
  }
}

StudentWork studentWorkFromJson(dynamic json_) {
  final json = (json_ as Map<String, dynamic>);
  return StudentWork(instantiatedWorkFromJson(json['Exercice']),
      progressionExtFromJson(json['Progression']));
}

Map<String, dynamic> studentWorkToJson(StudentWork item) {
  return {
    "Exercice": instantiatedWorkToJson(item.exercice),
    "Progression": progressionExtToJson(item.progression)
  };
}
