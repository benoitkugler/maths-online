// Code generated by gomacro/generator/dart. DO NOT EDIT

import 'predefined.dart';
import 'src_sql_teacher.dart';

// github.com/benoitkugler/maths-online/server/src/sql/homework.IdSheet
typedef IdSheet = int;

// github.com/benoitkugler/maths-online/server/src/sql/homework.Notation
enum Notation { noNotation, successNotation }

extension _NotationExt on Notation {
  static Notation fromValue(int i) {
    return Notation.values[i];
  }

  int toValue() {
    return index;
  }
}

Notation notationFromJson(dynamic json) => _NotationExt.fromValue(json as int);

dynamic notationToJson(Notation item) => item.toValue();

// github.com/benoitkugler/maths-online/server/src/sql/homework.Sheet
class Sheet {
  final IdSheet id;
  final IdClassroom idClassroom;
  final String title;
  final Notation notation;
  final bool activated;
  final Time deadline;

  const Sheet(this.id, this.idClassroom, this.title, this.notation,
      this.activated, this.deadline);

  @override
  String toString() {
    return "Sheet($id, $idClassroom, $title, $notation, $activated, $deadline)";
  }
}

Sheet sheetFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Sheet(
      intFromJson(json['Id']),
      intFromJson(json['IdClassroom']),
      stringFromJson(json['Title']),
      notationFromJson(json['Notation']),
      boolFromJson(json['Activated']),
      dateTimeFromJson(json['Deadline']));
}

JSON sheetToJson(Sheet item) {
  return {
    "Id": intToJson(item.id),
    "IdClassroom": intToJson(item.idClassroom),
    "Title": stringToJson(item.title),
    "Notation": notationToJson(item.notation),
    "Activated": boolToJson(item.activated),
    "Deadline": dateTimeToJson(item.deadline)
  };
}

// github.com/benoitkugler/maths-online/server/src/sql/homework.Time
typedef Time = DateTime;
