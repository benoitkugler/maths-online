// Code generated by structgen. DO NOT EDIT

import 'exercices/types.gen.dart';

typedef JSON = Map<String, dynamic>; // alias to shorten JSON convertors

String stringFromJson(dynamic json) => json == null ? "" : json as String;

String stringToJson(String item) => item;

bool boolFromJson(dynamic json) => json as bool;

bool boolToJson(bool item) => item;

// github.com/benoitkugler/maths-online.CheckExpressionOut
class CheckExpressionOut {
  final String reason;
  final bool isValid;

  const CheckExpressionOut(this.reason, this.isValid);

  @override
  String toString() {
    return "CheckExpressionOut($reason, $isValid)";
  }
}

CheckExpressionOut checkExpressionOutFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return CheckExpressionOut(
      stringFromJson(json['Reason']), boolFromJson(json['IsValid']));
}

JSON checkExpressionOutToJson(CheckExpressionOut item) {
  return {
    "Reason": stringToJson(item.reason),
    "IsValid": boolToJson(item.isValid)
  };
}

int intFromJson(dynamic json) => json as int;

int intToJson(int item) => item;

// github.com/benoitkugler/maths-online/maths/expression.Variable
class Variable {
  final String indice;
  final int name;

  const Variable(this.indice, this.name);

  @override
  String toString() {
    return "Variable($indice, $name)";
  }
}

Variable variableFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Variable(stringFromJson(json['Indice']), intFromJson(json['Name']));
}

JSON variableToJson(Variable item) {
  return {"Indice": stringToJson(item.indice), "Name": intToJson(item.name)};
}

// github.com/benoitkugler/maths-online/prof/editor.VarEntry
class VarEntry {
  final Variable variable;
  final String resolved;

  const VarEntry(this.variable, this.resolved);

  @override
  String toString() {
    return "VarEntry($variable, $resolved)";
  }
}

VarEntry varEntryFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return VarEntry(
      variableFromJson(json['Variable']), stringFromJson(json['Resolved']));
}

JSON varEntryToJson(VarEntry item) {
  return {
    "Variable": variableToJson(item.variable),
    "Resolved": stringToJson(item.resolved)
  };
}

List<VarEntry> listVarEntryFromJson(dynamic json) {
  if (json == null) {
    return [];
  }
  return (json as List<dynamic>).map(varEntryFromJson).toList();
}

List<dynamic> listVarEntryToJson(List<VarEntry> item) {
  return item.map(varEntryToJson).toList();
}

// github.com/benoitkugler/maths-online.EvaluateQuestionIn
class EvaluateQuestionIn {
  final QuestionAnswersIn answer;
  final List<VarEntry> params;
  final int idQuestion;

  const EvaluateQuestionIn(this.answer, this.params, this.idQuestion);

  @override
  String toString() {
    return "EvaluateQuestionIn($answer, $params, $idQuestion)";
  }
}

EvaluateQuestionIn evaluateQuestionInFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return EvaluateQuestionIn(questionAnswersInFromJson(json['Answer']),
      listVarEntryFromJson(json['Params']), intFromJson(json['IdQuestion']));
}

JSON evaluateQuestionInToJson(EvaluateQuestionIn item) {
  return {
    "Answer": questionAnswersInToJson(item.answer),
    "Params": listVarEntryToJson(item.params),
    "IdQuestion": intToJson(item.idQuestion)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.InstantiatedQuestion
class InstantiatedQuestion {
  final int id;
  final Question question;
  final List<VarEntry> params;

  const InstantiatedQuestion(this.id, this.question, this.params);

  @override
  String toString() {
    return "InstantiatedQuestion($id, $question, $params)";
  }
}

InstantiatedQuestion instantiatedQuestionFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return InstantiatedQuestion(intFromJson(json['Id']),
      questionFromJson(json['Question']), listVarEntryFromJson(json['Params']));
}

JSON instantiatedQuestionToJson(InstantiatedQuestion item) {
  return {
    "Id": intToJson(item.id),
    "Question": questionToJson(item.question),
    "Params": listVarEntryToJson(item.params)
  };
}

List<InstantiatedQuestion> listInstantiatedQuestionFromJson(dynamic json) {
  if (json == null) {
    return [];
  }
  return (json as List<dynamic>).map(instantiatedQuestionFromJson).toList();
}

List<dynamic> listInstantiatedQuestionToJson(List<InstantiatedQuestion> item) {
  return item.map(instantiatedQuestionToJson).toList();
}

// github.com/benoitkugler/maths-online/prof/editor.InstantiateQuestionsOut
typedef InstantiateQuestionsOut = List<InstantiatedQuestion>;
