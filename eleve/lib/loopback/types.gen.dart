// Code generated by gomacro/generator/dart. DO NOT EDIT

import '../questions/types.gen.dart'; // for github.com/benoitkugler/maths-online/maths/questions/client.Question
import '../questions/types.gen.dart'; // for github.com/benoitkugler/maths-online/maths/questions/client.QuestionAnswersOut
import '../shared_gen.dart'; // for github.com/benoitkugler/maths-online/tasks.InstantiatedWork
import '../shared_gen.dart'; // for github.com/benoitkugler/maths-online/tasks.Params
import '../shared_gen.dart'; // for github.com/benoitkugler/maths-online/tasks.ProgressionExt
import 'editor_question.dart'; // for github.com/benoitkugler/maths-online/maths/questions.QuestionPage
import 'questions/types.gen.dart'; // for github.com/benoitkugler/maths-online/maths/questions/client.QuestionAnswersIn

// github.com/benoitkugler/maths-online/tasks.Answer
class Answer {
  final Params params;
  final QuestionAnswersIn answer;

  const Answer(this.params, this.answer);

  @override
  String toString() {
    return "Answer($params, $answer)";
  }
}

Answer answerFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Answer(listVarEntryFromJson(json['Params']),
      questionAnswersInFromJson(json['Answer']));
}

JSON answerToJson(Answer item) {
  return {
    "Params": listVarEntryToJson(item.params),
    "Answer": questionAnswersInToJson(item.answer)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.LoopackEvaluateQuestionIn
class LoopackEvaluateQuestionIn {
  final QuestionPage question;
  final Answer answer;

  const LoopackEvaluateQuestionIn(this.question, this.answer);

  @override
  String toString() {
    return "LoopackEvaluateQuestionIn($question, $answer)";
  }
}

LoopackEvaluateQuestionIn loopackEvaluateQuestionInFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopackEvaluateQuestionIn(
      questionPageFromJson(json['Question']), answerFromJson(json['Answer']));
}

JSON loopackEvaluateQuestionInToJson(LoopackEvaluateQuestionIn item) {
  return {
    "Question": questionPageToJson(item.question),
    "Answer": answerToJson(item.answer)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.LoopbackEvaluateQuestionOut
class LoopbackEvaluateQuestionOut {
  final QuestionAnswersOut answers;

  const LoopbackEvaluateQuestionOut(this.answers);

  @override
  String toString() {
    return "LoopbackEvaluateQuestionOut($answers)";
  }
}

LoopbackEvaluateQuestionOut loopbackEvaluateQuestionOutFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackEvaluateQuestionOut(
      questionAnswersOutFromJson(json['Answers']));
}

JSON loopbackEvaluateQuestionOutToJson(LoopbackEvaluateQuestionOut item) {
  return {"Answers": questionAnswersOutToJson(item.answers)};
}

// github.com/benoitkugler/maths-online/prof/editor.loopbackExerciceCorrectAnswersOut
class LoopbackExerciceCorrectAnswersOut {
  final QuestionAnswersIn answers;
  final int questionIndex;

  const LoopbackExerciceCorrectAnswersOut(this.answers, this.questionIndex);

  @override
  String toString() {
    return "LoopbackExerciceCorrectAnswersOut($answers, $questionIndex)";
  }
}

LoopbackExerciceCorrectAnswersOut loopbackExerciceCorrectAnswersOutFromJson(
    dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackExerciceCorrectAnswersOut(
      questionAnswersInFromJson(json['Answers']),
      intFromJson(json['QuestionIndex']));
}

JSON loopbackExerciceCorrectAnswersOutToJson(
    LoopbackExerciceCorrectAnswersOut item) {
  return {
    "Answers": questionAnswersInToJson(item.answers),
    "QuestionIndex": intToJson(item.questionIndex)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.LoopbackPaused
class LoopbackPaused implements LoopbackServerEvent {
  const LoopbackPaused();

  @override
  String toString() {
    return "LoopbackPaused()";
  }
}

LoopbackPaused loopbackPausedFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackPaused();
}

JSON loopbackPausedToJson(LoopbackPaused item) {
  return {};
}

/// github.com/benoitkugler/maths-online/prof/editor.LoopbackServerEvent
abstract class LoopbackServerEvent {}

LoopbackServerEvent loopbackServerEventFromJson(dynamic json_) {
  final json = json_ as JSON;
  final kind = json['Kind'] as String;
  final data = json['Data'];
  switch (kind) {
    case "LoopbackPaused":
      return loopbackPausedFromJson(data);
    case "LoopbackShowExercice":
      return loopbackShowExerciceFromJson(data);
    case "LoopbackShowQuestion":
      return loopbackShowQuestionFromJson(data);
    default:
      throw ("unexpected type");
  }
}

JSON loopbackServerEventToJson(LoopbackServerEvent item) {
  if (item is LoopbackPaused) {
    return {'Kind': "LoopbackPaused", 'Data': loopbackPausedToJson(item)};
  } else if (item is LoopbackShowExercice) {
    return {
      'Kind': "LoopbackShowExercice",
      'Data': loopbackShowExerciceToJson(item)
    };
  } else if (item is LoopbackShowQuestion) {
    return {
      'Kind': "LoopbackShowQuestion",
      'Data': loopbackShowQuestionToJson(item)
    };
  } else {
    throw ("unexpected type");
  }
}

// github.com/benoitkugler/maths-online/prof/editor.LoopbackShowExercice
class LoopbackShowExercice implements LoopbackServerEvent {
  final InstantiatedWork exercice;
  final ProgressionExt progression;
  final List<QuestionPage> origin;

  const LoopbackShowExercice(this.exercice, this.progression, this.origin);

  @override
  String toString() {
    return "LoopbackShowExercice($exercice, $progression, $origin)";
  }
}

LoopbackShowExercice loopbackShowExerciceFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackShowExercice(
      instantiatedWorkFromJson(json['Exercice']),
      progressionExtFromJson(json['Progression']),
      listQuestionPageFromJson(json['Origin']));
}

JSON loopbackShowExerciceToJson(LoopbackShowExercice item) {
  return {
    "Exercice": instantiatedWorkToJson(item.exercice),
    "Progression": progressionExtToJson(item.progression),
    "Origin": listQuestionPageToJson(item.origin)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.LoopbackShowQuestion
class LoopbackShowQuestion implements LoopbackServerEvent {
  final Question question;
  final Params params;
  final QuestionPage origin;

  const LoopbackShowQuestion(this.question, this.params, this.origin);

  @override
  String toString() {
    return "LoopbackShowQuestion($question, $params, $origin)";
  }
}

LoopbackShowQuestion loopbackShowQuestionFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackShowQuestion(
      questionFromJson(json['Question']),
      listVarEntryFromJson(json['Params']),
      questionPageFromJson(json['Origin']));
}

JSON loopbackShowQuestionToJson(LoopbackShowQuestion item) {
  return {
    "Question": questionToJson(item.question),
    "Params": listVarEntryToJson(item.params),
    "Origin": questionPageToJson(item.origin)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.LoopbackShowQuestionAnswerIn
class LoopbackShowQuestionAnswerIn {
  final QuestionPage question;
  final Params params;

  const LoopbackShowQuestionAnswerIn(this.question, this.params);

  @override
  String toString() {
    return "LoopbackShowQuestionAnswerIn($question, $params)";
  }
}

LoopbackShowQuestionAnswerIn loopbackShowQuestionAnswerInFromJson(
    dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackShowQuestionAnswerIn(questionPageFromJson(json['Question']),
      listVarEntryFromJson(json['Params']));
}

JSON loopbackShowQuestionAnswerInToJson(LoopbackShowQuestionAnswerIn item) {
  return {
    "Question": questionPageToJson(item.question),
    "Params": listVarEntryToJson(item.params)
  };
}

// github.com/benoitkugler/maths-online/prof/editor.LoopbackShowQuestionAnswerOut
class LoopbackShowQuestionAnswerOut {
  final QuestionAnswersIn answers;

  const LoopbackShowQuestionAnswerOut(this.answers);

  @override
  String toString() {
    return "LoopbackShowQuestionAnswerOut($answers)";
  }
}

LoopbackShowQuestionAnswerOut loopbackShowQuestionAnswerOutFromJson(
    dynamic json_) {
  final json = (json_ as JSON);
  return LoopbackShowQuestionAnswerOut(
      questionAnswersInFromJson(json['Answers']));
}

JSON loopbackShowQuestionAnswerOutToJson(LoopbackShowQuestionAnswerOut item) {
  return {"Answers": questionAnswersInToJson(item.answers)};
}

typedef JSON = Map<String, dynamic>; // alias to shorten JSON convertors
int intFromJson(dynamic json) => json as int;

int intToJson(int item) => item;

List<QuestionPage> listQuestionPageFromJson(dynamic json) {
  if (json == null) {
    return [];
  }
  return (json as List<dynamic>).map(questionPageFromJson).toList();
}

List<dynamic> listQuestionPageToJson(List<QuestionPage> item) {
  return item.map(questionPageToJson).toList();
}
