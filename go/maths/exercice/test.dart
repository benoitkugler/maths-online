// Code generated by structgen. DO NOT EDIT

typedef JSON = Map<String, dynamic>; // alias to shorten JSON convertors

String StringFromJson(dynamic json) => json as String;

dynamic StringToJson(String item) => item;

Map<String, String> Dict_String_StringFromJson(dynamic json) {
  return json.map((k, v) => MapEntry(k as String, StringFromJson(v)));
}

dynamic Dict_String_StringToJson(Map<String, String> item) {
  return item.map((k, v) => MapEntry(StringToJson(k), StringToJson(v)));
}

bool boolFromJson(dynamic json) => json as bool;

dynamic boolToJson(bool item) => item;

// github.com/benoitkugler/maths-online/maths/exercice.Formula
class Formula implements block {
  final String Latex;
  final bool IsInline;

  Formula(this.Latex, this.IsInline);
}

Formula FormulaFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Formula(StringFromJson(json['Latex']), boolFromJson(json['IsInline']));
}

JSON FormulaToJson(Formula item) {
  return {
    "Latex": StringToJson(item.Latex),
    "IsInline": boolToJson(item.IsInline)
  };
}

// github.com/benoitkugler/maths-online/maths/exercice.FormulaField
class FormulaField implements block {
  final String Id;

  FormulaField(this.Id);
}

FormulaField FormulaFieldFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return FormulaField(StringFromJson(json['Id']));
}

JSON FormulaFieldToJson(FormulaField item) {
  return {"Id": StringToJson(item.Id)};
}

List<String> List_StringFromJson(dynamic json) {
  return (json as List<dynamic>).map(StringFromJson).toList();
}

dynamic List_StringToJson(List<String> item) {
  return item.map(StringToJson).toList();
}

// github.com/benoitkugler/maths-online/maths/exercice.ListField
class ListField implements block {
  final String Id;
  final List<String> Choices;

  ListField(this.Id, this.Choices);
}

ListField ListFieldFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return ListField(
      StringFromJson(json['Id']), List_StringFromJson(json['Choices']));
}

JSON ListFieldToJson(ListField item) {
  return {
    "Id": StringToJson(item.Id),
    "Choices": List_StringToJson(item.Choices)
  };
}

// github.com/benoitkugler/maths-online/maths/exercice.TextBlock
class TextBlock implements block {
  final String Text;

  TextBlock(this.Text);
}

TextBlock TextBlockFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return TextBlock(StringFromJson(json['Text']));
}

JSON TextBlockToJson(TextBlock item) {
  return {"Text": StringToJson(item.Text)};
}

abstract class block {}

block blockFromJson(dynamic json_) {
  final json = json_ as JSON;
  final kind = json['Kind'] as int;
  final data = json['Data'];
  switch (kind) {
    case 0:
      return FormulaFromJson(data);
    case 1:
      return FormulaFieldFromJson(data);
    case 2:
      return ListFieldFromJson(data);
    case 3:
      return TextBlockFromJson(data);
    default:
      throw ("unexpected type");
  }
}

JSON blockToJson(block item) {
  if (item is Formula) {
    return {'Kind': 0, 'Data': FormulaToJson(item)};
  } else if (item is FormulaField) {
    return {'Kind': 1, 'Data': FormulaFieldToJson(item)};
  } else if (item is ListField) {
    return {'Kind': 2, 'Data': ListFieldToJson(item)};
  } else if (item is TextBlock) {
    return {'Kind': 3, 'Data': TextBlockToJson(item)};
  } else {
    throw ("unexpected type");
  }
}

List<block> List_blockFromJson(dynamic json) {
  return (json as List<dynamic>).map(blockFromJson).toList();
}

dynamic List_blockToJson(List<block> item) {
  return item.map(blockToJson).toList();
}

// github.com/benoitkugler/maths-online/maths/exercice.Question
class Question {
  final List<block> Content;

  Question(this.Content);
}

Question QuestionFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Question(List_blockFromJson(json['Content']));
}

JSON QuestionToJson(Question item) {
  return {"Content": List_blockToJson(item.Content)};
}

List<Question> List_QuestionFromJson(dynamic json) {
  return (json as List<dynamic>).map(QuestionFromJson).toList();
}

dynamic List_QuestionToJson(List<Question> item) {
  return item.map(QuestionToJson).toList();
}

// github.com/benoitkugler/maths-online/maths/exercice.Exercice
class Exercice {
  final String Title;
  final String Description;
  final Map<String, String> Fields;
  final List<Question> Questions;

  Exercice(this.Title, this.Description, this.Fields, this.Questions);
}

Exercice ExerciceFromJson(dynamic json_) {
  final json = (json_ as JSON);
  return Exercice(
      StringFromJson(json['Title']),
      StringFromJson(json['Description']),
      Dict_String_StringFromJson(json['Fields']),
      List_QuestionFromJson(json['Questions']));
}

JSON ExerciceToJson(Exercice item) {
  return {
    "Title": StringToJson(item.Title),
    "Description": StringToJson(item.Description),
    "Fields": Dict_String_StringToJson(item.Fields),
    "Questions": List_QuestionToJson(item.Questions)
  };
}
